---
# Source: espresso/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: espresso-shop-web
  labels:
    app: espresso-shop-web
    deploy: espresso
    helm.sh/chart: espresso-0.1.0
    app.kubernetes.io/name: espresso
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: espresso/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-espresso
  labels:
    helm.sh/chart: espresso-0.1.0
    app.kubernetes.io/name: espresso
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: espresso
    app.kubernetes.io/instance: release-name
---
# Source: espresso/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-espresso
  labels:
    helm.sh/chart: espresso-0.1.0
    app.kubernetes.io/name: espresso
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: espresso
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: espresso
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: espresso-shop-web
      securityContext:
        {}
      containers:
        - name: espresso
          securityContext:
            {}
          image: "devopseasylearning2021/s3-project01-espresso-shop:v1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: espresso/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: espresso-shop-web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: espresso-shop-web
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
# Source: espresso/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-espresso
  labels:
    helm.sh/chart: espresso-0.1.0
    app.kubernetes.io/name: espresso
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-espresso
                port:
                  number: 80
